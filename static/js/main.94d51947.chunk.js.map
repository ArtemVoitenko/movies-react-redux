{"version":3,"sources":["components/movies-list/movies-item/movies-item.js","components/movies-list/movies-list.js","firebase/index.js","store/actions.js","services/parseDocument.js","components/upload-file/upload-file.js","components/search/search.js","components/create-movie/create-movie.js","components/sort/sort.js","components/movies-catalog/movies-catalog.js","components/movie-page/movie-page.js","components/app/app.js","components/error-indicator/error-indicator.js","components/error-boundry/error-boundry.js","store/reducer.js","store/store.js","index.js"],"names":["MoviesItem","_ref","id","title","onRemove","react_default","a","createElement","className","src","concat","alt","onClick","react_router_dom","to","MoviesList","movies","map","item","movies_item_movies_item","key","Title","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","addMovies","type","payload","createArrayOfObjects","arr","obj","forEach","_item","Object","toArray","values","slice","md5","createDataObject","split","parseDocument","text","slicedOnArrays","splitedByLines","prevEmptyLineIdx","slicedArr","i","length","slicedElem","push","sliceOnMovieArrays","UploadFile","handleFileRead","fileReader","fileText","result","moviesList","_this","setMoviesToDatabase","handleFileChosen","file","FileReader","onloadend","readAsText","prepareDataForDb","data","preparedData","moviesDbView","_this$props","props","addMoviesToStore","moviesInStore","database","ref","update","then","toConsumableArray","_this2","this","accept","onChange","e","target","files","Component","connect","dispatch","Search","onSearch","placeholder","value","CreateMovie","state","Release Year","Format","Stars","validationError","typeMovieInput","setState","defineProperty","name","isMovieExists","movieId","findIndex","validateMovieInputs","_this$state","year","setMovieToDb","onCreateMovie","_callee","regenerator_default","wrap","_context","prev","next","preventDefault","alert","hideCreateForm","stop","_this$state2","formVisibility","showCreateForm","react","onSubmit","htmlFor","Sort","onSortChanged","Fragment","checked","MoviesCatalog","searchQuery","sort","removeItemFromStore","itemId","removeItemIndex","newMoviesArray","removeItemFromDb","remove","filterMovies","filter","toLowerCase","includes","sortByAlphabet","b","once","snapshot","val","moviesSorted","moviesToShow","movies_list","search_search","upload_file_upload_file","create_movie_CreateMovie","components_sort_sort","MoviePage","movie","getMovieFromDb","renderActors","actors","actorsList","console","log","_this$state$movie","App","react_router","path","exact","component","render","match","movie_page_MoviePage","params","ErrorIndicator","ErrorBoundry","hasError","error_indicator","children","initialState","reducer","arguments","undefined","action","objectSpread","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","error_boundry","app","document","getElementById"],"mappings":"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","file":"static/js/main.94d51947.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./movies-item.scss\";\r\nconst MoviesItem = ({ id, title, onRemove }) => {\r\n  return (\r\n    <div className=\"col-6 col-md-4 col-lg-3\">\r\n      <div className=\"movies-item  \">\r\n        <img\r\n          src={`http://gravatar.com/avatar/${id}?s=300&d=identicon`}\r\n          // src={`https://robohash.org/${md5(id)}`}\r\n          alt=\"\"\r\n          className=\"movies-item__img\"\r\n        />\r\n        <p className=\"movies-item__title\">{title}</p>\r\n        <div className=\"btn-group\">\r\n          <button\r\n            className=\"movies-item__remove btn btn-danger\"\r\n            onClick={() => {\r\n              onRemove(id);\r\n            }}\r\n          >\r\n            remove\r\n          </button>\r\n          <Link className=\"btn btn-info\" to={`${id}`}>\r\n            info\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesItem;\r\n","import React from \"react\";\r\nimport MoviesItem from \"./movies-item/movies-item\";\r\n\r\nconst MoviesList = ({ movies, onRemove }) => {\r\n  const renderMoviesList = moviesList => {\r\n    return moviesList.map(item => {\r\n      return (\r\n        <MoviesItem\r\n          key={item.id}\r\n          id={item.id}\r\n          title={item.Title}\r\n          onRemove={id => {\r\n            onRemove(id);\r\n          }}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  return <div className=\"row\">{renderMoviesList(movies)}</div>;\r\n};\r\n\r\nexport default MoviesList;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/database\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAaVShtXKH8jFPbKlsQsV__JCrONhLuJjU\",\r\n  authDomain: \"movies-56bdf.firebaseapp.com\",\r\n  databaseURL: \"https://movies-56bdf.firebaseio.com\",\r\n  projectId: \"movies-56bdf\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"870648658967\",\r\n  appId: \"1:870648658967:web:39a0a0bbf70526d1\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","export const addMovies = movies => {\r\n  return {\r\n    type: \"ADD_MOVIE\",\r\n    payload: movies\r\n  };\r\n};\r\n","import md5 from \"md5\";\r\n\r\nconst sliceOnMovieArrays = text => {\r\n  const splitedByLines = text.split(/\\r?\\n/);\r\n  let prevEmptyLineIdx = 0;\r\n  const slicedArr = [];\r\n  for (let i = 0; i < splitedByLines.length; i++) {\r\n    if (splitedByLines[i] == \"\" && prevEmptyLineIdx !== i) {\r\n      const slicedElem = splitedByLines.slice(prevEmptyLineIdx, i);\r\n      if (slicedElem.length === 4) {\r\n        slicedArr.push(slicedElem);\r\n      }\r\n      prevEmptyLineIdx = i + 1;\r\n    }\r\n  }\r\n  return slicedArr;\r\n};\r\nconst splitByColon = arr => {\r\n  return arr.map(item => {\r\n    return item.split(\": \");\r\n  });\r\n};\r\nconst createDataObject = arr => {\r\n  let obj = {};\r\n  arr.forEach(item => {\r\n    const [key, ...values] = item;\r\n    obj[key] = `${values}`;\r\n  });\r\n  obj[\"id\"] = md5(obj.Title);\r\n  return obj;\r\n};\r\n\r\nconst createArrayOfObjects = arr => {\r\n  const objectsArray = arr.map(item => {\r\n    return createDataObject(splitByColon(item));\r\n  });\r\n  return objectsArray;\r\n};\r\n\r\nexport const parseDocument = text => {\r\n  const slicedOnArrays = sliceOnMovieArrays(text);\r\n  return createArrayOfObjects(slicedOnArrays);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { parseDocument } from \"../../services/parseDocument\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { addMovies } from \"../../store/actions\";\r\nimport \"./upload-file.scss\";\r\nclass UploadFile extends Component {\r\n  handleFileRead = fileReader => {\r\n    const fileText = fileReader.result;\r\n    const moviesList = parseDocument(fileText);\r\n\r\n    this.setMoviesToDatabase(moviesList);\r\n  };\r\n\r\n  handleFileChosen = file => {\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      this.handleFileRead(fileReader);\r\n    };\r\n    fileReader.readAsText(file);\r\n  };\r\n  prepareDataForDb = data => {\r\n    let preparedData = {};\r\n    data.forEach(item => {\r\n      preparedData[item.id] = item;\r\n    });\r\n    return preparedData;\r\n  };\r\n  setMoviesToDatabase = movies => {\r\n    const moviesDbView = this.prepareDataForDb(movies);\r\n    const { addMoviesToStore, moviesInStore } = this.props;\r\n    firebase\r\n      .database()\r\n      .ref(\"/movies\")\r\n      .update(moviesDbView)\r\n      .then(() => {\r\n        addMoviesToStore([...moviesInStore, ...movies]);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <label className=\"btn btn-success upload\">\r\n        <input\r\n          type=\"file\"\r\n          id=\"file\"\r\n          className=\"input-file\"\r\n          accept=\".txt\"\r\n          onChange={e => this.handleFileChosen(e.target.files[0])}\r\n        />\r\n        Upload\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ movies }) => {\r\n  return {\r\n    moviesInStore: movies\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addMoviesToStore: movies => {\r\n      dispatch(addMovies(movies));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UploadFile);\r\n","import React from \"react\";\r\nimport \"./search.scss\";\r\nconst Search = ({ onSearch }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Type movie title or actor's name to search\"\r\n      className=\"search form-control\"\r\n      onChange={e => {\r\n        onSearch(e.target.value);\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default Search;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport md5 from \"md5\";\r\nimport firebase from \"../../firebase\";\r\nimport \"./movie-form.scss\";\r\nexport default class CreateMovie extends Component {\r\n  state = {\r\n    Title: \"\",\r\n    \"Release Year\": \"\",\r\n    Format: \"\",\r\n    Stars: \"\",\r\n    id: \"\",\r\n    validationError: \"\"\r\n  };\r\n\r\n  typeMovieInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  isMovieExists = (movieId, movies) => {\r\n    const movieIdx = movies.findIndex(item => {\r\n      return item.id === movieId;\r\n    });\r\n    return movieIdx == -1 ? false : true;\r\n  };\r\n\r\n  validateMovieInputs = () => {\r\n    const { Title, Format, Stars, id } = this.state;\r\n    const { moviesInStore } = this.props;\r\n    const year = this.state[\"Release Year\"];\r\n    if (!Title || !year || !Format || !Stars) {\r\n      this.setState({\r\n        validationError: \"Fill in all fields\"\r\n      });\r\n    } else if (this.isMovieExists(id, moviesInStore)) {\r\n      this.setState({\r\n        validationError: \"Movie is already exists\"\r\n      });\r\n    }\r\n  };\r\n  setMovieToDb = () => {\r\n    const { moviesInStore } = this.props;\r\n    firebase\r\n      .database()\r\n      .ref(`/movies/${md5(this.state.Title)}`)\r\n      .update(this.state)\r\n      .then(() => {\r\n        this.props.addMoviesToStore([...moviesInStore, this.state]);\r\n        this.setState({\r\n          Title: \"\",\r\n          \"Release Year\": \"\",\r\n          Format: \"\",\r\n          Stars: \"\",\r\n          id: \"\",\r\n          validationError: \"\"\r\n        });\r\n      });\r\n  };\r\n  onCreateMovie = async e => {\r\n    e.preventDefault();\r\n    await this.setState({\r\n      id: md5(this.state.Title),\r\n      validationError: \"\"\r\n    });\r\n    this.validateMovieInputs();\r\n    const { validationError } = this.state;\r\n\r\n    if (!validationError) {\r\n      this.setMovieToDb();\r\n      this.props.hideCreateForm();\r\n    } else {\r\n      alert(validationError);\r\n    }\r\n  };\r\n  render() {\r\n    const { Title, Format, Stars, id } = this.state;\r\n    const year = this.state[\"Release Year\"];\r\n    const { formVisibility, showCreateForm, hideCreateForm } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <button className=\"btn btn-warning\" onClick={showCreateForm}>\r\n          Add movie\r\n        </button>\r\n        <div\r\n          className={`movie-form__wrapper ${formVisibility ? \"active\" : null}`}\r\n        >\r\n          <form className=\"movie-form\" onSubmit={this.onCreateMovie}>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger movie-form__close\"\r\n              onClick={hideCreateForm}\r\n            >\r\n              X\r\n            </button>\r\n            <p className=\"movie-form__title\">Add new movie</p>\r\n            <label htmlFor=\"\" className=\"movie-form__label\">\r\n              <span className=\"movie-form__tip\">Title</span>\r\n              <input\r\n                onChange={this.typeMovieInput}\r\n                type=\"text\"\r\n                name=\"Title\"\r\n                value={Title}\r\n                className=\"movie-form__input form-control\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"\" className=\"movie-form__label\">\r\n              <span className=\"movie-form__tip\">Release year</span>\r\n              <input\r\n                onChange={this.typeMovieInput}\r\n                type=\"text\"\r\n                name=\"Release Year\"\r\n                value={year}\r\n                className=\"movie-form__input form-control\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"\" className=\"movie-form__label\">\r\n              <span className=\"movie-form__tip\">Format</span>\r\n              <input\r\n                onChange={this.typeMovieInput}\r\n                type=\"text\"\r\n                name=\"Format\"\r\n                className=\"movie-form__input form-control\"\r\n                value={Format}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"\" className=\"movie-form__label\">\r\n              <span className=\"movie-form__tip\">Stars</span>\r\n              <input\r\n                onChange={this.typeMovieInput}\r\n                type=\"text\"\r\n                name=\"Stars\"\r\n                className=\"movie-form__input form-control\"\r\n                value={Stars}\r\n              />\r\n            </label>\r\n            <button\r\n              className=\"movie-form__submit btn btn-success\"\r\n              type=\"submit\"\r\n            >\r\n              Add movie\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./sort.scss\";\r\nconst Sort = ({ onSortChanged }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"sort\">\r\n        <div className=\"sort__label\"> Alphabet sort:</div>\r\n        <input\r\n          className=\"switch__input\"\r\n          type=\"checkbox\"\r\n          id=\"switch\"\r\n          onChange={e => {\r\n            onSortChanged(e.target.checked);\r\n          }}\r\n        />\r\n        <label className=\"switch sort__switch\" htmlFor=\"switch\" />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Sort;\r\n","import React, { Component } from \"react\";\nimport MoviesList from \"../movies-list/movies-list\";\nimport { connect } from \"react-redux\";\nimport firebase from \"../../firebase/\";\nimport { addMovies } from \"../../store/actions\";\nimport UploadFile from \"../upload-file/upload-file\";\nimport Search from \"../search/search\";\nimport CreateMovie from \"../create-movie/create-movie\";\nimport Sort from \"../sort/sort\";\nimport \"./movies-catalog.scss\";\n\nclass MoviesCatalog extends Component {\n  state = {\n    searchQuery: \"\",\n    sort: false,\n    formVisibility: false\n  };\n  componentDidMount() {\n    firebase\n      .database()\n      .ref(\"/movies/\")\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.val()) {\n          return this.props.addMoviesToStore(Object.values(snapshot.val()));\n        }\n      });\n  }\n  removeItemFromStore = itemId => {\n    const { movies } = this.props;\n    const removeItemIndex = movies.findIndex(item => {\n      return item.id === itemId;\n    });\n    const newMoviesArray = [\n      ...movies.slice(0, removeItemIndex),\n      ...movies.slice(removeItemIndex + 1)\n    ];\n    this.props.addMoviesToStore(newMoviesArray);\n  };\n  removeItemFromDb = id => {\n    firebase\n      .database()\n      .ref(`/movies/${id}`)\n      .remove()\n      .then(() => {\n        this.removeItemFromStore(id);\n      });\n  };\n  showCreateForm = () => {\n    this.setState({ formVisibility: true });\n  };\n  hideCreateForm = () => {\n    this.setState({ formVisibility: false });\n  };\n  onSearch = searchQuery => {\n    this.setState({ searchQuery });\n  };\n  onSortChanged = value => {\n    this.setState({\n      sort: value\n    });\n  };\n  filterMovies = (searchQuery, movies) => {\n    return movies.filter(item => {\n      return (\n        item.Title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        item.Stars.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    });\n  };\n  sortByAlphabet = movies => {\n    return [...movies].sort((a, b) => {\n      return a.Title.toLowerCase() > b.Title.toLowerCase() ? 1 : -1;\n    });\n  };\n  render() {\n    const { movies, addMoviesToStore } = this.props;\n    const { searchQuery, sort, formVisibility } = this.state;\n    const moviesSorted = sort ? this.sortByAlphabet(movies) : movies;\n    const moviesToShow = this.filterMovies(searchQuery, moviesSorted);\n    const moviesList = movies.length ? (\n      <MoviesList onRemove={this.removeItemFromDb} movies={moviesToShow} />\n    ) : null;\n\n    return (\n      <div className=\"container\">\n        <div className=\"header jumbotron\">\n          <Search onSearch={this.onSearch} />\n\n          <UploadFile />\n          <CreateMovie\n            moviesInStore={this.props.movies}\n            addMoviesToStore={addMoviesToStore}\n            showCreateForm={this.showCreateForm}\n            formVisibility={formVisibility}\n            hideCreateForm={this.hideCreateForm}\n          />\n          <Sort onSortChanged={this.onSortChanged} />\n        </div>\n        {moviesList}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ movies }) => {\n  return {\n    movies\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    addMoviesToStore: movies => {\n      dispatch(addMovies(movies));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MoviesCatalog);\n","import React, { Component } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport \"./movie-info.scss\";\r\nexport default class MoviePage extends Component {\r\n  state = {\r\n    movie: {}\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props.itemId);\r\n    this.getMovieFromDb(this.props.movieId);\r\n  }\r\n  getMovieFromDb = movieId => {\r\n    firebase\r\n      .database()\r\n      .ref(`/movies/${movieId}`)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        this.setState({\r\n          movie: snapshot.val()\r\n        });\r\n      });\r\n  };\r\n  renderActors = actors => {\r\n    const actorsList = actors.split(\", \");\r\n    return (\r\n      <div className=\"movie-info__actors\">\r\n        {actorsList.map(item => {\r\n          return (\r\n            <div className=\"movie-info__actor\">\r\n              <img\r\n                src={`https://robohash.org/${item}`}\r\n                alt=\"\"\r\n                className=\"movie-info__avatar\"\r\n              />\r\n              <p className=\"movie-info__name\">{item}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    const {\r\n      movie: { Title, Stars, id, Format }\r\n    } = this.state;\r\n    const year = this.state.movie[\"Release Year\"];\r\n\r\n    const actors = Stars ? this.renderActors(Stars) : null;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 jumbotron\">\r\n            <img\r\n              src={`http://gravatar.com/avatar/${id}?s=500&d=identicon`}\r\n              alt=\"\"\r\n              className=\"img-responsive\"\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-7\">\r\n            <div className=\"movie-info\">\r\n              <p className=\"movie-info__title\">{Title}</p>\r\n              <p className=\"movie-info__item\">Release Year: {year}</p>\r\n              <p className=\"movie-info__item\">Format: {Format}</p>\r\n              <p className=\"movie-info__item\">Stars: {actors}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport MoviesCatalog from \"../movies-catalog/movies-catalog\";\r\nimport MoviePage from \"../movie-page/movie-page\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"../../styles/styles.scss\";\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Route path=\"/\" exact component={MoviesCatalog} />\r\n      <Route\r\n        path=\"/:id\"\r\n        render={({ match }) => {\r\n          return <MoviePage movieId={match.params.id} />;\r\n        }}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div className=\"error-indicator\">Error!!!!!</div>;\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import React, { Component } from \"react\";\r\nimport ErrorIndicator from \"../error-indicator/error-indicator\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false\r\n  };\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundry;\r\n","const initialState = {\r\n  movies: []\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_MOVIE\": {\r\n      return {\r\n        ...state,\r\n        movies: action.payload\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/app\";\nimport ErrorBoundry from \"./components/error-boundry/error-boundry\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <Router>\n        <App />\n      </Router>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}