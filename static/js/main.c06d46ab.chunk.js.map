{"version":3,"sources":["components/movies-list/movies-item/movies-item.js","components/movies-list/movies-list.js","firebase/index.js","store/actions.js","services/parseDocument.js","components/upload-file/upload-file.js","components/search/search.js","components/dropdown/dropdown.js","components/create-movie/create-movie.js","components/sort/sort.js","components/confirmation-popup/confirmation-popup.js","components/success-popup/success-popup.js","components/loading-indicator/loading-indicator.js","components/movies-catalog/movies-catalog.js","components/actors/actors.js","components/movie-page/movie-page.js","components/app/app.js","components/error-indicator/error-indicator.js","components/error-boundry/error-boundry.js","store/reducer.js","store/store.js","index.js"],"names":["MoviesItem","_ref","id","title","onRemove","react_default","a","createElement","className","src","concat","alt","onClick","react_router_dom","to","MoviesList","movies","map","item","movies_item_movies_item","key","Title","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","addMovies","type","payload","createArrayOfObjects","arr","obj","forEach","_item","Object","toArray","values","slice","md5","createDataObject","split","parseDocument","text","slicedOnArrays","splitedByLines","prevEmptyLineIdx","slicedArr","i","length","slicedElem","push","sliceOnMovieArrays","UploadFile","handleFileRead","fileReader","fileText","result","moviesList","_this","setMoviesToDatabase","handleFileChosen","file","FileReader","onloadend","readAsText","prepareDataForDb","data","preparedData","moviesDbView","_this$props","props","addMoviesToStore","moviesInStore","database","ref","update","then","toConsumableArray","_this2","this","accept","onChange","e","target","files","Component","connect","dispatch","Search","onSearch","placeholder","value","Dropdown","items","changeActive","activeItem","_useState","useState","_useState2","slicedToArray","dropdownVisible","toggleDropdown","tagName","innerText","parentNode","onChangeActive","CreateMovie","dropdownItems","state","Release Year","Format","Stars","validationError","typeMovieInput","setState","defineProperty","name","onYearChange","sum","isNaN","parseInt","isMovieExists","movieId","findIndex","validateMovieInputs","_this$state","allStarsCorrectData","every","year","setMovieToDb","toggleSuccessPopup","setTimeout","formatChange","onCreateMovie","_callee","regenerator_default","wrap","_context","prev","next","preventDefault","alert","hideCreateForm","stop","_this$state2","_this$props2","formVisibility","showCreateForm","react","onSubmit","htmlFor","dropdown_dropdown","Sort","onSortChanged","Fragment","checked","ConfirmationPopup","actionConfirm","closePopup","SuccessPopup","LoadingIndicator","style","width","height","MoviesCatalog","searchQuery","sort","confirmationVisibility","removeItemFromStore","itemId","removeItemIndex","newMoviesArray","removeClicked","setItemToRemove","removeItemFromDb","closeConfirmPopup","setLoading","remove","filterMovies","filter","toLowerCase","includes","sortByAlphabet","b","localeCompare","getMoviesFromDb","once","snapshot","val","_this3","successPopupVisibility","itemToRemove","loading","moviesSorted","moviesToShow","movies_list","search_search","upload_file_upload_file","create_movie_CreateMovie","components_sort_sort","success_popup","confirmation_popup","loading_indicator_loading_indicator","visibily","Actors","actorsList","actors","MoviePage","movie","getMovieFromDb","console","log","_this$state$movie","actors_actors","App","react_router","path","exact","component","render","match","movie_page_MoviePage","params","ErrorIndicator","ErrorBoundry","hasError","error_indicator","children","initialState","reducer","arguments","undefined","action","objectSpread","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","error_boundry","app","document","getElementById"],"mappings":"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","file":"static/js/main.c06d46ab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./movies-item.scss\";\r\nconst MoviesItem = ({ id, title, onRemove }) => {\r\n  return (\r\n    <div className=\"col-6 col-md-4 col-lg-3\">\r\n      <div className=\"movies-item  \">\r\n        <img\r\n          src={`http://gravatar.com/avatar/${id}?s=300&d=identicon`}\r\n          // src={`https://robohash.org/${md5(id)}`}\r\n          alt=\"\"\r\n          className=\"movies-item__img\"\r\n        />\r\n        <p className=\"movies-item__title\">{title}</p>\r\n        <div className=\"btn-group\">\r\n          <button\r\n            className=\"movies-item__remove btn btn-danger\"\r\n            onClick={() => {\r\n              onRemove(id);\r\n            }}\r\n          >\r\n            remove\r\n          </button>\r\n          <Link className=\"btn btn-info\" to={`${id}`}>\r\n            info\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesItem;\r\n","import React from \"react\";\r\nimport MoviesItem from \"./movies-item/movies-item\";\r\n\r\nconst MoviesList = ({ movies, onRemove }) => {\r\n  const renderMoviesList = moviesList => {\r\n    return moviesList.map(item => {\r\n      return (\r\n        <MoviesItem\r\n          key={item.id}\r\n          id={item.id}\r\n          title={item.Title}\r\n          onRemove={id => {\r\n            onRemove(id);\r\n          }}\r\n        />\r\n      );\r\n    });\r\n  };\r\n  return <div className=\"row\">{renderMoviesList(movies)}</div>;\r\n};\r\n\r\nexport default MoviesList;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/database\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAaVShtXKH8jFPbKlsQsV__JCrONhLuJjU\",\r\n  authDomain: \"movies-56bdf.firebaseapp.com\",\r\n  databaseURL: \"https://movies-56bdf.firebaseio.com\",\r\n  projectId: \"movies-56bdf\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"870648658967\",\r\n  appId: \"1:870648658967:web:39a0a0bbf70526d1\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","export const addMovies = movies => {\r\n  return {\r\n    type: \"ADD_MOVIE\",\r\n    payload: movies\r\n  };\r\n};\r\n\r\nexport const toggleSuccessPopup = visibility => {\r\n  return {\r\n    type: \"TOGGLE_SUCCESS_POPUP\",\r\n    payload: visibility\r\n  };\r\n};\r\n\r\nexport const setItemToRemove = id => {\r\n  return {\r\n    type: \"SET_ITEM_TO_REMOVE\",\r\n    payload: id\r\n  };\r\n};\r\n\r\nexport const setLoading = loading => {\r\n  return {\r\n    type: \"SET_LOADING\",\r\n    payload: loading\r\n  };\r\n};\r\n","import md5 from \"md5\";\r\n\r\nconst sliceOnMovieArrays = text => {\r\n  const splitedByLines = text.split(/\\r?\\n/);\r\n  let prevEmptyLineIdx = 0;\r\n  const slicedArr = [];\r\n  for (let i = 0; i < splitedByLines.length; i++) {\r\n    if (splitedByLines[i] == \"\" && prevEmptyLineIdx !== i) {\r\n      const slicedElem = splitedByLines.slice(prevEmptyLineIdx, i);\r\n      if (slicedElem.length === 4) {\r\n        slicedArr.push(slicedElem);\r\n      }\r\n      prevEmptyLineIdx = i + 1;\r\n    }\r\n  }\r\n  return slicedArr;\r\n};\r\nconst splitByColon = arr => {\r\n  return arr.map(item => {\r\n    return item.split(\": \");\r\n  });\r\n};\r\nconst createDataObject = arr => {\r\n  let obj = {};\r\n  arr.forEach(item => {\r\n    const [key, ...values] = item;\r\n    obj[key] = `${values}`;\r\n  });\r\n  obj[\"id\"] = md5(obj.Title);\r\n  return obj;\r\n};\r\n\r\nconst createArrayOfObjects = arr => {\r\n  const objectsArray = arr.map(item => {\r\n    return createDataObject(splitByColon(item));\r\n  });\r\n  return objectsArray;\r\n};\r\n\r\nexport const parseDocument = text => {\r\n  const slicedOnArrays = sliceOnMovieArrays(text);\r\n  return createArrayOfObjects(slicedOnArrays);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { parseDocument } from \"../../services/parseDocument\";\r\nimport firebase from \"../../firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { addMovies } from \"../../store/actions\";\r\nimport \"./upload-file.scss\";\r\nclass UploadFile extends Component {\r\n  handleFileRead = fileReader => {\r\n    const fileText = fileReader.result;\r\n    const moviesList = parseDocument(fileText);\r\n\r\n    this.setMoviesToDatabase(moviesList);\r\n  };\r\n\r\n  handleFileChosen = file => {\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      this.handleFileRead(fileReader);\r\n    };\r\n    fileReader.readAsText(file);\r\n  };\r\n  prepareDataForDb = data => {\r\n    let preparedData = {};\r\n    data.forEach(item => {\r\n      preparedData[item.id] = item;\r\n    });\r\n    return preparedData;\r\n  };\r\n  setMoviesToDatabase = movies => {\r\n    const moviesDbView = this.prepareDataForDb(movies);\r\n    const { addMoviesToStore, moviesInStore } = this.props;\r\n    firebase\r\n      .database()\r\n      .ref(\"/movies\")\r\n      .update(moviesDbView)\r\n      .then(() => {\r\n        addMoviesToStore([...moviesInStore, ...movies]);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <label className=\"btn btn-success upload\">\r\n        <input\r\n          type=\"file\"\r\n          id=\"file\"\r\n          className=\"input-file\"\r\n          accept=\".txt\"\r\n          onChange={e => this.handleFileChosen(e.target.files[0])}\r\n        />\r\n        Upload\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ movies }) => {\r\n  return {\r\n    moviesInStore: movies\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addMoviesToStore: movies => {\r\n      dispatch(addMovies(movies));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UploadFile);\r\n","import React from \"react\";\r\nimport \"./search.scss\";\r\nconst Search = ({ onSearch }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Type movie title or actor's name to search\"\r\n      className=\"search form-control\"\r\n      onChange={e => {\r\n        onSearch(e.target.value);\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport \"./dropdown.scss\";\r\nconst Dropdown = ({ items, changeActive, activeItem }) => {\r\n  const [dropdownVisible, toggleDropdown] = useState(false);\r\n  const onChangeActive = e => {\r\n    let target = e.target;\r\n    while (e.target !== \"UL\") {\r\n      if (target.tagName == \"LI\") {\r\n        changeActive(target.innerText);\r\n        toggleDropdown(!dropdownVisible);\r\n        return;\r\n      }\r\n      target = target.parentNode;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <div\r\n        className=\"dropdown__header form-control\"\r\n        onClick={() => toggleDropdown(!dropdownVisible)}\r\n      >\r\n        {activeItem}\r\n      </div>\r\n      <ul\r\n        className={`dropdown__list dropdown-menu ${\r\n          dropdownVisible ? \"active\" : null\r\n        }`}\r\n        onClick={e => {\r\n          onChangeActive(e);\r\n        }}\r\n      >\r\n        {items.map(item => {\r\n          return (\r\n            <li\r\n              key={item}\r\n              className={`dropdown__item dropdown-item ${\r\n                item === activeItem ? \"active\" : null\r\n              }`}\r\n            >\r\n              {item}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport md5 from \"md5\";\r\nimport firebase from \"../../firebase\";\r\nimport \"./movie-form.scss\";\r\nimport Dropdown from \"../dropdown/dropdown\";\r\nexport default class CreateMovie extends Component {\r\n  dropdownItems = [\"VHS\", \"DVD\", \"Blue-Ray\"];\r\n  state = {\r\n    Title: \"\",\r\n    \"Release Year\": \"\",\r\n    Format: this.dropdownItems[0],\r\n    Stars: \"\",\r\n    id: \"\",\r\n    validationError: \"\"\r\n  };\r\n  typeMovieInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n  onYearChange = e => {\r\n    let value = e.target.value;\r\n\r\n    let sum = !isNaN(parseInt(value)) ? parseInt(value) : \"\";\r\n    if (value.length < 5) {\r\n      this.setState({\r\n        [\"Release Year\"]: sum\r\n      });\r\n    }\r\n  };\r\n  // onStarNameInput = e => {\r\n  //   let whiteSpaceCount = this.state.Stars.match(/ /g) || [].length;\r\n  //   console.log(e);\r\n\r\n  //   return whiteSpaceCount <= 2 || e.keyCode == 8\r\n  //     ? this.setState({\r\n  //         [e.target.name]: e.target.value\r\n  //       })\r\n  //     : \"\";\r\n  // };\r\n\r\n  isMovieExists = (movieId, movies) => {\r\n    const movieIdx = movies.findIndex(item => {\r\n      return item.id === movieId;\r\n    });\r\n    return movieIdx == -1 ? false : true;\r\n  };\r\n\r\n  validateMovieInputs = () => {\r\n    const { Title, Format, Stars, id } = this.state;\r\n    const { moviesInStore } = this.props;\r\n    let starsArray = Stars.split(\", \");\r\n    const allStarsCorrectData = starsArray.every(item => {\r\n      return item.split(\" \").length === 2;\r\n    });\r\n    const year = this.state[\"Release Year\"];\r\n    if (!Title || !year || !Format || !Stars) {\r\n      this.setState({\r\n        validationError: \"Fill in all fields\"\r\n      });\r\n    } else if (this.isMovieExists(id, moviesInStore)) {\r\n      this.setState({\r\n        validationError: \"Movie is already exists\"\r\n      });\r\n    } else if (year > 2019 || year < 1901) {\r\n      this.setState({\r\n        validationError: \"Release year must be in between 1901 and 2019 yy.\",\r\n        [\"Release Year\"]: \"\"\r\n      });\r\n    } else if (!allStarsCorrectData) {\r\n      this.setState({\r\n        validationError: `All stars must have a name and surname.\r\nEvery stars must be divided by comma and whitespace`\r\n      });\r\n    }\r\n  };\r\n  setMovieToDb = () => {\r\n    const { moviesInStore, toggleSuccessPopup } = this.props;\r\n    firebase\r\n      .database()\r\n      .ref(`/movies/${md5(this.state.Title)}`)\r\n      .update(this.state)\r\n      .then(() => {\r\n        this.props.addMoviesToStore([...moviesInStore, this.state]);\r\n        this.setState({\r\n          Title: \"\",\r\n          \"Release Year\": \"\",\r\n          Format: \"\",\r\n          Stars: \"\",\r\n          id: \"\",\r\n          validationError: \"\"\r\n        });\r\n        toggleSuccessPopup(true);\r\n        setTimeout(() => {\r\n          toggleSuccessPopup(false);\r\n        }, 2000);\r\n      });\r\n  };\r\n\r\n  formatChange = Format => {\r\n    this.setState({ Format });\r\n  };\r\n  onCreateMovie = async e => {\r\n    e.preventDefault();\r\n    await this.setState({\r\n      id: md5(this.state.Title),\r\n      validationError: \"\"\r\n    });\r\n    this.validateMovieInputs();\r\n    const { validationError } = this.state;\r\n\r\n    if (!validationError) {\r\n      this.setMovieToDb();\r\n      this.props.hideCreateForm();\r\n    } else {\r\n      alert(validationError);\r\n    }\r\n  };\r\n  render() {\r\n    const { Title, Format, Stars, id } = this.state;\r\n    const year = this.state[\"Release Year\"];\r\n    const { formVisibility, showCreateForm, hideCreateForm } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <button className=\"btn btn-warning\" onClick={showCreateForm}>\r\n          Add movie\r\n        </button>\r\n        <div\r\n          className={`movie-form__wrapper ${formVisibility ? \"active\" : null}`}\r\n        >\r\n          <form className=\"movie-form\" onSubmit={this.onCreateMovie}>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger movie-form__close\"\r\n              onClick={hideCreateForm}\r\n            >\r\n              X\r\n            </button>\r\n            <p className=\"movie-form__title\">Add new movie</p>\r\n            <label htmlFor=\"\" className=\"movie-form__label\">\r\n              <span className=\"movie-form__tip\">Title</span>\r\n              <input\r\n                onChange={this.typeMovieInput}\r\n                type=\"text\"\r\n                name=\"Title\"\r\n                value={Title}\r\n                className=\"movie-form__input form-control\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"\" className=\"movie-form__label\">\r\n              <span className=\"movie-form__tip\">Release year</span>\r\n              <input\r\n                onChange={this.onYearChange}\r\n                type=\"text\"\r\n                name=\"Release Year\"\r\n                value={year}\r\n                className=\"movie-form__input form-control\"\r\n              />\r\n            </label>\r\n            <label htmlFor=\"\" className=\"movie-form__label\">\r\n              <span className=\"movie-form__tip\">Format</span>\r\n              <Dropdown\r\n                items={this.dropdownItems}\r\n                changeActive={this.formatChange}\r\n                activeItem={Format}\r\n              />\r\n            </label>\r\n            <label htmlFor=\"\" className=\"movie-form__label\">\r\n              <span className=\"movie-form__tip\">Stars</span>\r\n              <input\r\n                onChange={this.typeMovieInput}\r\n                type=\"text\"\r\n                name=\"Stars\"\r\n                className=\"movie-form__input form-control\"\r\n                value={Stars}\r\n              />\r\n              {/* <input\r\n                onChange={this.onStarNameInput}\r\n                type=\"text\"\r\n                name=\"Stars\"\r\n                className=\"movie-form__input form-control\"\r\n                value={Stars}\r\n              /> */}\r\n              {/* <MaskedInput\r\n                mask={[/(^[A-Z]{1}[a-z]{1,14} [A-Z]{1}[a-z]{1,14}$)|(^[А-Я]{1}[а-я]{1,14} [А-Я]{1}[а-я]{1,14}$)/]}\r\n                onChange={this.typeMovieInput}\r\n                type=\"text\"\r\n                name=\"Stars\"\r\n                className=\"movie-form__input form-control\"\r\n                value={Stars}\r\n              /> */}\r\n            </label>\r\n            <button\r\n              className=\"movie-form__submit btn btn-success\"\r\n              type=\"submit\"\r\n            >\r\n              Add movie\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./sort.scss\";\r\nconst Sort = ({ onSortChanged }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"sort\">\r\n        <div className=\"sort__label\"> Alphabet sort:</div>\r\n        <input\r\n          className=\"switch__input\"\r\n          type=\"checkbox\"\r\n          id=\"switch\"\r\n          onChange={e => {\r\n            onSortChanged(e.target.checked);\r\n          }}\r\n        />\r\n        <label className=\"switch sort__switch\" htmlFor=\"switch\" />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Sort;\r\n","import React from \"react\";\r\n\r\nconst ConfirmationPopup = ({ actionConfirm, closePopup }) => {\r\n  return (\r\n    <div className=\"popup__wrapper\">\r\n      <div className=\"popup\">\r\n        <p className=\"popup__title\">\r\n          Are you sure, yo want to delete this film?\r\n        </p>\r\n        <div className=\"popup__buttons\">\r\n          <button\r\n            onClick={() => {\r\n              actionConfirm();\r\n            }}\r\n            className=\"popup__confirm btn btn-success\"\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              closePopup();\r\n            }}\r\n            className=\"popup__cancel btn btn-danger \"\r\n          >\r\n            No\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ConfirmationPopup;\r\n","import React from \"react\";\r\n\r\nconst SuccessPopup = () => {\r\n  return (\r\n    <div className=\"popup__wrapper\">\r\n      <div className=\"popup\">\r\n        <p className=\"popup__text\">Item successfully added</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessPopup;\r\n","import React from \"react\";\r\nimport \"./loading-indicator.scss\";\r\n\r\nconst LoadingIndicator = () => {\r\n  return (\r\n    <div className=\"loading-indicator\">\r\n      <div className=\"lds-css ng-scope\">\r\n        <div\r\n          style={{ width: 100 + \"%\", height: 100 + \"%\" }}\r\n          className=\"lds-double-ring\"\r\n        >\r\n          <div />\r\n          <div />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LoadingIndicator;\r\n","import React, { Component } from \"react\";\nimport MoviesList from \"../movies-list/movies-list\";\nimport { connect } from \"react-redux\";\nimport firebase from \"../../firebase/\";\nimport {\n  addMovies,\n  toggleSuccessPopup,\n  setItemToRemove,\n  setLoading\n} from \"../../store/actions\";\nimport UploadFile from \"../upload-file/upload-file\";\nimport Search from \"../search/search\";\nimport CreateMovie from \"../create-movie/create-movie\";\nimport Sort from \"../sort/sort\";\nimport \"./movies-catalog.scss\";\nimport ConfirmationPopup from \"../confirmation-popup/confirmation-popup\";\nimport SuccessPopup from \"../success-popup/success-popup\";\nimport LoadingIndicator from \"../loading-indicator/loading-indicator\";\n\nclass MoviesCatalog extends Component {\n  state = {\n    searchQuery: \"\",\n    sort: false,\n    formVisibility: false,\n    confirmationVisibility: false\n  };\n  componentDidMount() {\n    this.getMoviesFromDb();\n  }\n  getMoviesFromDb() {\n    firebase\n      .database()\n      .ref(\"/movies/\")\n      .once(\"value\")\n      .then(snapshot => {\n        if (snapshot.val()) {\n          return this.props.addMoviesToStore(Object.values(snapshot.val()));\n        }\n      });\n  }\n  removeItemFromStore = itemId => {\n    const { movies } = this.props;\n    const removeItemIndex = movies.findIndex(item => {\n      return item.id === itemId;\n    });\n    const newMoviesArray = [\n      ...movies.slice(0, removeItemIndex),\n      ...movies.slice(removeItemIndex + 1)\n    ];\n    this.props.addMoviesToStore(newMoviesArray);\n  };\n  removeClicked = id => {\n    this.props.setItemToRemove(id);\n    this.setState({ confirmationVisibility: true });\n  };\n  removeItemFromDb = id => {\n    this.closeConfirmPopup();\n    this.props.setLoading(true);\n    firebase\n      .database()\n      .ref(`/movies/${id}`)\n      .remove()\n      .then(() => {\n        this.removeItemFromStore(id);\n        this.props.setLoading(false);\n      });\n  };\n  showCreateForm = () => {\n    this.setState({ formVisibility: true });\n  };\n  hideCreateForm = () => {\n    this.setState({ formVisibility: false });\n  };\n  onSearch = searchQuery => {\n    this.setState({ searchQuery });\n  };\n  onSortChanged = value => {\n    this.setState({\n      sort: value\n    });\n  };\n  filterMovies = (searchQuery, movies) => {\n    return movies.filter(item => {\n      return (\n        item.Title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n        item.Stars.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n    });\n  };\n  sortByAlphabet = movies => {\n    return [...movies].sort((a, b) => {\n      return a.Title.toLowerCase().localeCompare(b.Title.toLowerCase());\n    });\n  };\n  closeConfirmPopup = () => {\n    this.setState({ confirmationVisibility: false });\n  };\n  render() {\n    const {\n      movies,\n      addMoviesToStore,\n      successPopupVisibility,\n      toggleSuccessPopup,\n      itemToRemove,\n      loading\n    } = this.props;\n    const {\n      searchQuery,\n      sort,\n      formVisibility,\n      confirmationVisibility\n    } = this.state;\n    const moviesSorted = sort ? this.sortByAlphabet(movies) : movies;\n    const moviesToShow = this.filterMovies(searchQuery, moviesSorted);\n    const moviesList = movies.length ? (\n      <MoviesList onRemove={this.removeClicked} movies={moviesToShow} />\n    ) : null;\n\n    return (\n      <div className=\"container\">\n        <div className=\"header jumbotron\">\n          <Search onSearch={this.onSearch} />\n\n          <UploadFile />\n          <CreateMovie\n            moviesInStore={this.props.movies}\n            addMoviesToStore={addMoviesToStore}\n            showCreateForm={this.showCreateForm}\n            formVisibility={formVisibility}\n            hideCreateForm={this.hideCreateForm}\n            toggleSuccessPopup={toggleSuccessPopup}\n          />\n          <Sort onSortChanged={this.onSortChanged} />\n        </div>\n        {moviesList}\n        {successPopupVisibility ? <SuccessPopup /> : null}\n        {confirmationVisibility ? (\n          <ConfirmationPopup\n            actionConfirm={() => {\n              this.removeItemFromDb(itemToRemove);\n            }}\n            closePopup={this.closeConfirmPopup}\n          />\n        ) : null}\n        {loading ? <LoadingIndicator /> : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  movies,\n  successPopupVisibility,\n  itemToRemove,\n  loading\n}) => {\n  return {\n    movies,\n    successPopupVisibility,\n    itemToRemove,\n    loading\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    addMoviesToStore: movies => {\n      dispatch(addMovies(movies));\n    },\n\n    toggleSuccessPopup: visibily => {\n      dispatch(toggleSuccessPopup(visibily));\n    },\n    setItemToRemove: id => {\n      dispatch(setItemToRemove(id));\n    },\n    setLoading: loading => {\n      dispatch(setLoading(loading));\n    }\n\n    // toggleRemovePopup: visibily => {}\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MoviesCatalog);\n","import React from \"react\";\r\nconst Actors = ({ actors }) => {\r\n  const actorsList = actors.split(\", \");\r\n  return (\r\n    <div className=\"movie-info__actors\">\r\n      {actorsList.map(item => {\r\n        return (\r\n          <div className=\"movie-info__actor\">\r\n            <img\r\n              src={`https://robohash.org/${item}`}\r\n              alt=\"\"\r\n              className=\"movie-info__avatar\"\r\n            />\r\n            <p className=\"movie-info__name\">{item}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Actors;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport \"./movie-info.scss\";\r\nimport Actors from \"../actors/actors\";\r\nexport default class MoviePage extends Component {\r\n  state = {\r\n    movie: {}\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props.itemId);\r\n    this.getMovieFromDb(this.props.movieId);\r\n  }\r\n  getMovieFromDb = movieId => {\r\n    firebase\r\n      .database()\r\n      .ref(`/movies/${movieId}`)\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        this.setState({\r\n          movie: snapshot.val()\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      movie: { Title, Stars, id, Format }\r\n    } = this.state;\r\n    const year = this.state.movie[\"Release Year\"];\r\n\r\n    const actors = Stars ? <Actors actors={Stars} /> : null;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 jumbotron\">\r\n            <img\r\n              src={`http://gravatar.com/avatar/${id}?s=500&d=identicon`}\r\n              alt=\"\"\r\n              className=\"img-responsive\"\r\n            />\r\n          </div>\r\n          <div className=\"col-12 col-md-7\">\r\n            <div className=\"movie-info\">\r\n              <p className=\"movie-info__title\">{Title}</p>\r\n              <p className=\"movie-info__item\">Release Year: {year}</p>\r\n              <p className=\"movie-info__item\">Format: {Format}</p>\r\n              <p className=\"movie-info__item\">Stars: {actors}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport MoviesCatalog from \"../movies-catalog/movies-catalog\";\r\nimport MoviePage from \"../movie-page/movie-page\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"../../styles/styles.scss\";\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <Route path=\"/\" exact component={MoviesCatalog} />\r\n      <Route\r\n        path=\"/:id\"\r\n        exact\r\n        render={({ match }) => {\r\n          return <MoviePage movieId={match.params.id} />;\r\n        }}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div className=\"error-indicator\">Error!!!!!</div>;\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import React, { Component } from \"react\";\r\nimport ErrorIndicator from \"../error-indicator/error-indicator\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false\r\n  };\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true\r\n    });\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundry;\r\n","const initialState = {\r\n  movies: [],\r\n  successPopupVisibility: false,\r\n  itemToRemove: null,\r\n  loading: false\r\n};\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_MOVIE\": {\r\n      return {\r\n        ...state,\r\n        movies: action.payload\r\n      };\r\n    }\r\n    case \"TOGGLE_SUCCESS_POPUP\": {\r\n      return {\r\n        ...state,\r\n        successPopupVisibility: action.payload\r\n      };\r\n    }\r\n    case \"SET_ITEM_TO_REMOVE\": {\r\n      return {\r\n        ...state,\r\n        itemToRemove: action.payload\r\n      };\r\n    }\r\n    case \"SET_LOADING\": {\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/app\";\nimport ErrorBoundry from \"./components/error-boundry/error-boundry\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <Router>\n        <App />\n      </Router>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}